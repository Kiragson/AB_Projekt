create or replace PROCEDURE EditUser (
    p_user_id IN NUMBER,
    p_new_username IN VARCHAR2,
    p_new_password IN VARCHAR2,
    p_changer_user_id IN NUMBER
) AS
    v_current_username VARCHAR2(50);
    v_result NUMBER;
BEGIN
    -- Sprawdzenie, czy użytkownik istnieje
    BEGIN
        SELECT Username INTO v_current_username FROM Users WHERE UserID = p_user_id FOR UPDATE;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            v_result := log_user_registration_action(p_new_username, 'ERROR', 'Użytkownik nie istnieje.');
            RAISE_APPLICATION_ERROR(-20011, 'Użytkownik nie istnieje.');
    END;

    -- Walidacja nowej nazwy użytkownika
    IF TRIM(p_new_username) IS NULL THEN
        v_result := log_user_registration_action(p_new_username, 'FAIL', 'Nowa nazwa użytkownika nie może być pusta.');
        RAISE_APPLICATION_ERROR(-20012, 'Nowa nazwa użytkownika nie może być pusta.');
    END IF;

    -- Sprawdzenie, czy nowa nazwa użytkownika już istnieje w bazie danych (z wyjątkiem bieżącego użytkownika)
    IF LOWER(v_current_username) != LOWER(p_new_username) AND UserExists(p_new_username) THEN
        v_result := log_user_registration_action(p_new_username, 'FAIL', 'Nazwa użytkownika jest już zajęta przez innego użytkownika.');
        RAISE_APPLICATION_ERROR(-20013, 'Nazwa użytkownika jest już zajęta przez innego użytkownika.');
    END IF;

    -- Walidacja nowego hasła
    IF NOT isValidPassword(p_new_password) THEN
        v_result := log_user_registration_action(p_new_username, 'FAIL', 'Nowe hasło nie spełnia wymagań.');
        RAISE_APPLICATION_ERROR(-20010, 'Nowe hasło nie spełnia wymagań.');
    END IF;

    -- Logowanie zmiany nazwy użytkownika
    INSERT INTO UserAudit (UserID, Action, OldUsername, NewUsername, ChangedBy)
    VALUES (p_user_id, 'Update', v_current_username, p_new_username, p_changer_user_id);

    -- Aktualizacja danych użytkownika
    UPDATE Users
    SET Username = p_new_username, Password = p_new_password
    WHERE UserID = p_user_id;

    -- Logowanie udanej aktualizacji
    v_result := log_user_registration_action(p_new_username, 'SUCCESS', 'Dane użytkownika zaktualizowane.');

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        v_result := log_user_registration_action(p_new_username, 'ERROR', SQLERRM);
        RAISE_APPLICATION_ERROR(-20002, 'Błąd podczas aktualizacji: ' || SQLERRM);
END;
/